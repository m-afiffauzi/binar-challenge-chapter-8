{
  "openapi": "3.0.0",
  "info": {
    "title": "Players API",
    "description": "This is documentation of Players API.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000/api/v1"
    }
  ],
  "paths": {
    "/players": {
      "get": {
        "tags": ["Players"],
        "summary": "Get all players",
        "description": "Use this route to get all players data",
        "operationId": "getPlayers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/PlayerData"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Players"],
        "summary": "Create player",
        "description": "Create player required this schema and password must be at least 6 characters long",
        "operationId": "createPlayers",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/PlayerData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "password cannot be empty"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/players/{id}": {
      "get": {
        "tags": ["Players"],
        "summary": "Get player by id",
        "description": "Add player id params to get player data by id",
        "operationId": "getPlayersById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "Player id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/PlayerData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Not Found"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with ${id} not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Players"],
        "summary": "Update player",
        "description": "Update player required this schema",
        "operationId": "updatePlayers",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "Player id",
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with id: ${id} successfully updated"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to updated"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Players"],
        "summary": "Delete player",
        "description": "Use this method to delete a player",
        "operationId": "deletePlayers",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "Player id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with id: ${id}, was deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "FAILED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "FAILED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot delete Player with id=${id}. Maybe Player was not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/players/exp/{id}": {
      "post": {
        "tags": ["Players"],
        "summary": "Update player experience",
        "description": "Update player experience required this schema",
        "operationId": "updateExperience",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "description": "Player id",
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exp": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SUCCESS",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "SUCCESS"
                    },
                    "message": {
                      "type": "string",
                      "example": "Player with id = ${id} gain ${exp} experience. Total experience = ${player.experience}"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "FAILED",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "FAILED"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cannot update Player with id=${id}!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PlayerData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "someone"
          },
          "email": {
            "type": "string",
            "example": "someone@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "$2b$10$W7swk2u58TxokueTOQtZQOAr4Ugn9LoSoztPi/1CyixGQRsTmrCwO"
          },
          "experience": {
            "type": "integer",
            "example": 0
          },
          "lvl": {
            "type": "integer",
            "example": 0
          },
          "createdAt": {
            "type": "date",
            "example": "2022-07-01T02:12:06.728Z"
          },
          "updatedAt": {
            "type": "date",
            "example": "2022-07-01T02:12:06.728Z"
          }
        }
      }
    }
  }
}
